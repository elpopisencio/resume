{"version":3,"sources":["components/ContactMe.jsx","components/Technologies.jsx","components/Summary.jsx","App.js","serviceWorker.js","index.js"],"names":["SocialLink","_ref","href","icon","children","react_default","a","createElement","className","class","ContactMe","ContactMe_SocialLink","Icon","Technologies","Technologies_Icon","Summary","App","components_ContactMe","components_Summary","components_Technologies","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qKAEMA,EAAa,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,KAAMC,EAAfH,EAAeG,SAAf,OAClBC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBN,KAAMA,GACpCG,EAAAC,EAAAC,cAAA,QAAME,MAAM,QACXJ,EAAAC,EAAAC,cAAA,KAAGE,MAAON,KAEXE,EAAAC,EAAAC,cAAA,YAAOH,KAsDMM,EAlDG,kBACjBL,EAAAC,EAAAC,cAAA,WAASC,UAAU,WAClBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAf,cACAH,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACI,EAAD,CAAYT,KAAK,4BAA4BC,KAAK,mBAAlD,uBAIDE,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACI,EAAD,CAAYR,KAAK,eAAeD,KAAK,qBAArC,oBAIDG,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACI,EAAD,CACCR,KAAK,qBACLD,KAAK,6DAFN,wBAODG,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACI,EAAD,CACCR,KAAK,gBACLD,KAAK,mCAFN,kBAODG,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACI,EAAD,CACCR,KAAK,cACLD,KAAK,kCAFN,2BAODG,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACI,EAAD,CACCR,KAAK,iBACLD,KAAK,oCAFN,qBChDEU,EAAO,SAAAX,GAAA,IAAGE,EAAHF,EAAGE,KAAH,OACZE,EAAAC,EAAAC,cAAA,QAAME,MAAM,iBACXJ,EAAAC,EAAAC,cAAA,KAAGE,MAAON,EAAO,aAiBJU,EAbM,kBACpBR,EAAAC,EAAAC,cAAA,WAASC,UAAU,WAClBH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,cAAX,gBACAJ,EAAAC,EAAAC,cAACO,EAAD,CAAMX,KAAK,iBACXE,EAAAC,EAAAC,cAACO,EAAD,CAAMX,KAAK,cACXE,EAAAC,EAAAC,cAACO,EAAD,CAAMX,KAAK,gBACXE,EAAAC,EAAAC,cAACO,EAAD,CAAMX,KAAK,oBACXE,EAAAC,EAAAC,cAACO,EAAD,CAAMX,KAAK,iBACXE,EAAAC,EAAAC,cAACO,EAAD,CAAMX,KAAK,eACXE,EAAAC,EAAAC,cAACO,EAAD,CAAMX,KAAK,kBCHEY,EAZC,kBACfV,EAAAC,EAAAC,cAAA,WAASC,UAAU,WAClBH,EAAAC,EAAAC,cAAA,OAAKE,MAAM,cAAX,WACAJ,EAAAC,EAAAC,cAAA,mBACQF,EAAAC,EAAAC,cAAA,uBADR,8PCsBaS,EAtBH,WACX,OACCX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,sBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,mBAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAACU,EAAD,OAEDZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAACW,EAAD,MACAb,EAAAC,EAAAC,cAACY,EAAD,UCReC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAOrB,EAAAC,EAAAC,cAACoB,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dd79772d.chunk.js","sourcesContent":["import React from 'react';\n\nconst SocialLink = ({ href, icon, children }) => (\n\t<a className=\"button is-white\" href={href}>\n\t\t<span class=\"icon\">\n\t\t\t<i class={icon}></i>\n\t\t</span>\n\t\t<span>{children}</span>\n\t</a>\n);\n\nconst ContactMe = () => (\n\t<section className=\"section\">\n\t\t<div className=\"title is-4\">Contact me</div>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<SocialLink href=\"mailto:jberoisa@gmail.com\" icon=\"far fa-envelope\">\n\t\t\t\t\tjberoisa@gmail.com\n\t\t\t\t</SocialLink>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<SocialLink icon=\"fas fa-phone\" href=\"tel:+542994184018\">\n\t\t\t\t\t+54 299 4184018\n\t\t\t\t</SocialLink>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<SocialLink\n\t\t\t\t\ticon=\"fab fa-linkedin-in\"\n\t\t\t\t\thref=\"https://www.linkedin.com/in/jorge-luis-beroisa-8523b7141/\"\n\t\t\t\t>\n\t\t\t\t\t/jorge-luis-beroisa\n\t\t\t\t</SocialLink>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<SocialLink\n\t\t\t\t\ticon=\"fab fa-github\"\n\t\t\t\t\thref=\"https://github.com/elpopisencio\"\n\t\t\t\t>\n\t\t\t\t\t/elpopisencio\n\t\t\t\t</SocialLink>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<SocialLink\n\t\t\t\t\ticon=\"fas fa-home\"\n\t\t\t\t\thref=\"https://elpopisencio.github.io\"\n\t\t\t\t>\n\t\t\t\t\telpopisencio.github.io\n\t\t\t\t</SocialLink>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<SocialLink\n\t\t\t\t\ticon=\"fab fa-twitter\"\n\t\t\t\t\thref=\"https://twitter.com/elpopisencio\"\n\t\t\t\t>\n\t\t\t\t\t@elpopisencio\n\t\t\t\t</SocialLink>\n\t\t\t</li>\n\t\t</ul>\n\t</section>\n);\n\nexport default ContactMe;\n","import React from 'react';\n\nconst Icon = ({ icon }) => (\n\t<span class=\"icon is-large\">\n\t\t<i class={icon + ' fa-2x'}></i>\n\t</span>\n);\n\nconst Technologies = () => (\n\t<section className=\"section\">\n\t\t<div class=\"title is-4\">Technologies</div>\n\t\t<Icon icon=\"fab fa-react\" />\n\t\t<Icon icon=\"fab fa-js\" />\n\t\t<Icon icon=\"fab fa-node\" />\n\t\t<Icon icon=\"fab fa-css3-alt\" />\n\t\t<Icon icon=\"fab fa-html5\" />\n\t\t<Icon icon=\"fab fa-npm\" />\n\t\t<Icon icon=\"fab fa-sass\" />\n\t</section>\n);\n\nexport default Technologies;\n","import React from 'react';\n\nconst Summary = () => (\n\t<section className=\"section\">\n\t\t<div class=\"title is-4\">Summary</div>\n\t\t<p>\n\t\t\tI am a <b>passionate</b> Web Developer. I like to follow coding best\n\t\t\tpractices and enjoy reading and writing beautiful, maintainable code.\n\t\t\tMy two favorite design principles are KISS and DRY, and I try to apply\n\t\t\tthem not only when I am developing but in other tasks as well.\n\t\t</p>\n\t</section>\n);\n\nexport default Summary;\n","import React from 'react';\nimport ContactMe from './components/ContactMe';\nimport Technologies from './components/Technologies';\nimport Summary from './components/Summary';\n\nconst App = () => {\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div className=\"hero\">\n\t\t\t\t<div className=\"hero-body\">\n\t\t\t\t\t<h1 className=\"title\">Jorge Luis Beroisa</h1>\n\t\t\t\t\t<h2 className=\"subtitle\">Web Developer</h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"columns\">\n\t\t\t\t<div className=\"column is-narrow\">\n\t\t\t\t\t<ContactMe />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"column\">\n\t\t\t\t\t<Summary />\n\t\t\t\t\t<Technologies />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}